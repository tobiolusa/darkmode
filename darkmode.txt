CSS 

/* Light mode theme */
body.light-mode {
    --e-global-color-primary: black;
    --e-global-color-secondary: white;
    --e-global-color-text: #7A7A7A;
    --e-global-color-accent: #61CE70;

    background-color: #ffffff;
  
    /* Header background color for light mode */
    --header-bg-color: white;
}

/* Dark mode (default theme using :root) */
:root {
    --e-global-color-primary: white;
    --e-global-color-secondary: black;
    --e-global-color-text: #7A7A7A;
    --e-global-color-accent: #61CE70;

    /* Header background color for dark mode */
     /* You can change this to your preferred dark color */
}

/* Header background color based on mode */
/* #masthead .ast-container, 
.site-header-focus-item + .ast-breadcrumbs-wrapper {
    background-color: var(--e-global-color-primary);
} */

/* Floating toggle button styles */
.theme-toggle {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: var(--e-global-color-primary);
    color: var(--e-global-color-secondary);
    border: none;
    border-radius: 50%;
    padding: 15px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
    cursor: pointer;
    transition: background-color 0.3s, color 0.3s, transform 0.2s;
    z-index: 1000;
}

.theme-toggle:hover {
    transform: scale(1.1);
    color: var(--e-global-color-secondary);
    background-color: var(--e-global-color-primary);
}

.theme-toggle i {
    font-size: 1.2rem;
    background-color: var(--e-global-color-primary);
}


JS

document.addEventListener("DOMContentLoaded", function () {
    const toggleButton = document.getElementById("toggle-theme");
    const icon = toggleButton.querySelector("i");

    // Check localStorage for the theme, default to dark mode
    const currentTheme = localStorage.getItem("theme") || "dark-mode";
    document.body.classList.add(currentTheme);

    // Update icon based on the current theme
    icon.className = currentTheme === "dark-mode" ? "fas fa-moon" : "fas fa-sun";

    toggleButton.addEventListener("click", function () {
        const isLightMode = document.body.classList.contains("light-mode");

        // Toggle the theme
        const newTheme = isLightMode ? "dark-mode" : "light-mode";
        document.body.classList.remove("light-mode", "dark-mode");
        document.body.classList.add(newTheme);

        // Update localStorage
        localStorage.setItem("theme", newTheme);

        // Update the icon
        icon.className = isLightMode ? "fas fa-moon" : "fas fa-sun";
    });
});



HTML



  
  <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Light/Dark Mode Toggle</title>
    <!-- Font Awesome for Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
</head>
<body class="dark-mode">
    <!-- Content -->
    <!-- Theme Toggle Button -->
    <button id="toggle-theme" class="theme-toggle">
        <i class="fas fa-moon"></i>
    </button>
</body>
</html>




#PRELOADER 

Below is the HTML / JS. 
Instruction > Paste inside HTML wdiget in a section, and set the z-index to = 9999

<div class="page-preloader">
  <div class="preloader-wrapper">
    <div id="num-wrapper" class="preloader-num-wrapper">
      <p id="preloader-num">0%</p>
    </div>
  </div>

  <div class="preloader-bottom">
    <div id="preText" class="preloader-text">Your magic +my lens=timeless moments.</div>
    <img src="https://theajibadeisrael.com/wp-content/uploads/2025/03/Ajibade-Isreal-web-logob.png" alt="Logo" class="preloader-logo" />
  </div>
</div>



<script>
let count = 1;
let counterArray = [0, 36, 48, 64, 72, 84, 92, 100];

document.querySelector("#preloader-num").textContent = `${counterArray[count]}%`;

window.addEventListener("DOMContentLoaded", () => {
  let preload = setInterval(() => {
    document.querySelector("#preloader-num").textContent = `${counterArray[count]}%`;
    count++;
    if (count === counterArray.length) {
      clearInterval(preload);
      let tlPre = gsap.timeline();
      tlPre.to("#preloader-num", { y: "130%" });
      tlPre.to(".page-preloader", { opacity: 0 });
      tlPre.to(".page-preloader", { display: "none" });
    }
  }, 250);
});
</script>




CSS 


.page-preloader {
  z-index: 1000;
  background-color: #000;
  justify-content: center;
  align-items: center;
  display: flex;
  position: fixed;
  inset: 0;
}

/* Center the number perfectly */
.preloader-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.preloader-num-wrapper {
  font-family: sans-serif;
  font-size: 1.5rem;
  overflow: hidden;
  text-align: center;
  color: #ffffff;
}

/* Bottom left and bottom right fixed */
.preloader-bottom {
  position: absolute;
  bottom: 20px;
  width: 100%;
  display: flex;
  justify-content: space-between;
  padding: 0 20px;
  align-items: center;
}

.preloader-text {
  font-family: sans-serif;
  font-size: 1rem;
  color: #fff;
  text-transform: uppercase;
}

.preloader-logo {
  width: 120px; /* Adjust logo size here */
  height: auto;
}


/* Reset margins and padding on all devices */
html, body {
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}




